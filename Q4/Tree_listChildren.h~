#include <string>
#include <iostream>

typedef int node_t;
typedef int Tree;
typedef string labeltype;

class cell{
	node_t node;
	int next;
};

class node{
	labeltype label;
	int header;
	node_t parent;
};

class Tree_listChildren{
	static int availc = 1; // pointer for available cellspace
	static int availn = 1; // pointer for available nodepace
	const int MAXNODES = 1000;
	static cell cellspace[MAXNODES+1];
	static node nodespace[MAXNODES+1];
	
	static Tree_listChildren Create0(labeltype l);
	static Tree_listChildren Create1(labeltype l,Tree_listChildren T1);
	static Tree_listChildren Create2(labeltype l,Tree_listChildren T1,Tree_listChildren T2);
	static Tree_listChildren Create3(labeltype l,Tree_listChildren T1,Tree_listChildren T2,Tree_listChildren T3);
	
	private:
		int cursor;
	public:
		Tree_ListChildren();
		node_t Parent(node_t n);
		node_t Leftmost_Child(node_t n);
		node_t Right_Sibling(node_t n);
		labeltype Label(node_t n);
		node_t Root();
		void MAKENULL();
};
